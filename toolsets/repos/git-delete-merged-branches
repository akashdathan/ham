#!/bin/bash
CURRENT_GIT_BRANCH=`git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'`
if [ "$CURRENT_GIT_BRANCH" != "master" ]; then
    echo "E/Currently on '$CURRENT_GIT_BRANCH' branch, merged branches can only be deleted from the master branch."
    echo "E/Do 'git checkout master' first."
    exit 1
fi
if [ "$1" == "noprune" ]; then
    echo "# SKIPPED: git fetch --prune origin"
    shift
else
    echo "# git fetch --prune origin"
    git fetch --prune origin
fi

if [[ "$1" == "doit_local" || "$1" == "doit_remote" ]]; then
    DOIT_SPECIFIED=yes
fi

echo "# Local branches..."
LOCAL_BRANCHES=$(git branch --merged master | grep -v develop | grep -v master | sed -E "s|^ *origin/||g" | sed -E "s|\*||g")
for branch in $LOCAL_BRANCHES
do
    if [ "$1" == "doit_local" ]; then
        echo "I/Deleting local branch '$branch'."
        git branch -d $branch
    else
        echo "I/Would delete local branch '$branch'."
    fi
done
if [ "$1" == "doit_local" ]; then
    shift
fi

echo "# Remote branches..."
REMOTE_BRANCHES=$(git branch -r --merged master | grep origin | grep -v develop | grep -v master | sed -E "s|^ *origin/||g" | sed -E "s|\*||g")
for branch in $REMOTE_BRANCHES
do
    if [ "$1" == "doit_remote" ]; then
        echo "I/Deleting remote branch '$branch'."
        git push origin $branch --delete
    else
        echo "I/Would delete remote branch '$branch'."
    fi
done

if [[ "$DOIT_SPECIFIED" != "yes" ]]; then
    echo "# Type 'git-delete-merged-branches doit_local/remote' to remove the branches listed above."
fi
