#!/bin/bash
. ham-bash-lib.sh

REPOFILE=$1
case "${REPOFILE}" in
    *_repo*)
        echo "== Repo: $REPOFILE"
        shift
        if [ ! -e "$REPOFILE" ]; then
            REPOFILE=$WORK/../$REPOFILE
        fi
        ;;
    *)
        if [ -e "$WORK/$USERNAME/_repos" ]; then
            REPOFILE="$WORK/$USERNAME/_repos"
            echo "== Work User Repo: $REPOFILE"
        elif [ -e ./_repos ]; then
            REPOFILE=`pwd`/_repos
            echo "== Current Dir Repo: $REPOFILE"
        else
            REPOFILE=$WORK/../Users/$USERNAME/_repos
            echo "== User Repo: $REPOFILE"
        fi
        ;;
esac

echo "... $REPOFILE:" $REPOFILE

if [ ! -e "$REPOFILE" ]
then
    echo "# Can't find Repo list !"
    exit 1
fi

CMD=$1
shift

pushd $WORK/..

cat $REPOFILE |
while read REPO
do
    if [ ${REPO:0:1} != "#" -a ${REPO:0:2} != "//" ]; then
        arr=(${REPO//;/ })

        # echo "ARR: " ${arr[0]} " -> " ${arr[1]}
        REPO=${arr[0]}
        REMOTE=${arr[1]}
        REMOTE2=${arr[2]}
        if [ -z $REMOTE ]; then
            REMOTE=$REPO
            REMOTE2=$REPO
            echo "::: $REPO :::"
        else
            if [ -z $REMOTE2 ]; then
                REMOTE2=$REMOTE
                echo "::: $REPO ($REMOTE) :::"
            else
                echo "::: $REPO ($REMOTE) ($REMOTE2) :::"
            fi
        fi

        if [ ! -e "${REPO}/.git" -a ! -e "${REPO}/.hg" -a ! -e "${REPO}/.svn" ]; then
            echo "NO REPO: no .git, .hg or .svn folder found."
        else
            pushd ${REPO} > /dev/null
            errcheck $? git_repos "can't move to repo's folder !"
            ARGS0=${*/__REPO__/$REPO}
            ARGS1=${ARGS0/__REMOTE2__/$REMOTE2}
            ARGS=${ARGS1/__REMOTE__/$REMOTE}
            # echo "Runing: $CMD $ARGS"
            $CMD $ARGS
            RET=$?
            popd > /dev/null
        fi
    fi
done

echo "== Done."
