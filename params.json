{"name":"Ham","tagline":"Ham is a language agnostic 'make' replacement and a virtual build environment.","body":"Ham aims to provide an easily replicable build and development environment\r\nthat can be setup automatically on any Windows, OSX & Linux machines.\r\n\r\nOnce the repository has been cloned **ham** will automatically fetch all the tools\r\nneeded to complete a build of various kind of software. No install required !\r\n\r\nCurrently supported languages/framework/targets:\r\n\r\n* **Bash** 3.1+ on Windows, Linux, OSX\r\n* **C/C++** on Windows, Linux, OSX, iOS, Android (x86 & ARM), iOS and HTML5 (via Emscripten)\r\n* **ObjectiveC** on OSX and iOS\r\n* **Java** on Windows, Linux, OSX and Android\r\n* **NodeJS** on Windows, Linux and OSX\r\n* **Python 2.6 & 2.7** on Windows, Linux and OSX\r\n* **Perl 5.6** on Windows, Linux and OSX\r\n* **Git**, **SVN** and **Mercurial** on Windows, Linux and OSX\r\n* **XSLT 1&2** on Windows, Linux, OSX\r\n* **Emacs** & **Emacs Muse** on Windows, Linux, OSX\r\n* **TeX** on Windows, Linux, OSX\r\n* **Doxygen** on Windows and OSX\r\n* **ffmpeg** on Windows\r\n* **winutils** and **windbg** on Windows\r\n\r\nHam is MIT licensed, see LICENSE.txt.\r\n\r\n# Getting Started\r\n\r\nThis will NOT use or mess with any of your OS's setup ; it is completely self contained so that you can experiment safely and more importantly so that builds are easily reproducible on other computers/VMs.\r\n\r\nIf you plan to use all the toolchains you should have at least 5GB of free space where you'll be putting ham. The core stuff is only about 10-20MB.\r\n\r\nIf you don't have git download the latest version directly from:\r\nhttps://github.com/prenaux/ham/archive/master.zip\r\n\r\nOtherwise clone or pull the latest version of the ham repository:\r\n```git clone https://github.com/prenaux/ham.git```\r\n\r\n## Windows\r\n\r\nNo setup is required, just run ```ham-shell.cmd``` from the ```ham/bin``` directory and you'll be dropped in a Bash shell which has access to all the bash and ham commands. You can also use ```ham.cmd``` to run ham from third-party applications or from cmd.exe.\r\n\r\n## OSX / Linux\r\n\r\nAdd this to your shell's .profile:\r\n\r\n```bash\r\nexport WORK=\"${HOME}/My Work\"\r\nexport HAM_HOME=\"$WORK/ham\"\r\nexport PATH=\"${PATH}:$HAM_HOME/bin\"\r\n```\r\n\r\nNote that the previous snippet is for the bash shell, if you're using another shell you should modify accordingly.\r\n\r\n# Toolsets\r\n\r\nA toolset contains a set of tools, its also commonly called a toolchain.\r\n\r\nThe following instructions all assume that you are in a 'ham shell' (see the Getting Started section).\r\n\r\nThe general command to import/setup a toolset is:\r\n```\r\n. ham-toolset TOOLSET1 ... TOOLSET2\r\n```\r\n\r\nMost of the time you will only use a single toolset since most will automatically import all their dependencies:\r\n```\r\n. ham-toolset TOOLSET\r\n```\r\n\r\n'hat' is a shorthand for 'ham-toolset':\r\n```\r\n. hat TOOLSET\r\n```\r\n\r\nWhen you import a toolset all the necessary binaries will be downloaded so in most case you won't need to install or download any third-party package to get them working.\r\n\r\n## Default\r\n\r\nThe default toolset will setup the OS's default C and C++ compilers, the Java JDK 1.6 and the XSLT tools.\r\n\r\nType:\r\n```\r\n. hat default\r\n```\r\n\r\n## Repos (Git & SVN)\r\n\r\nThe repos toolset makes sure git and SVN are available. It will also make Mercurial (hg) accessible if it can be found on the system.\r\n\r\nType:\r\n```\r\n. hat repos\r\n```\r\n\r\n## Emscripten\r\n\r\nHam + Emscripten requires about 1GB of disk space.\r\n\r\n- Import the Emscripten toolset in the shell with ```. ham-toolset emscripten```. This can take a while the first time as it will download all the dependencies needed to run Emscripten ; that is: emscripten, nodejs, java_jdk16 and python_27.\r\n\r\n- If the download of the packages is interrupted just re-run ```. ham-toolset emscripten``` it will resume where it left off.\r\n\r\n- Once the toolset has been imported successfully it will print the toolset's info, it should look like this:\r\n\r\n```\r\nI/Imported toolset 'python_27'.\r\nI/Imported toolset 'nodejs'.\r\nI/Imported toolset 'java_jdk16'.\r\nI/Imported toolset 'xslt_tools'.\r\nI/Imported toolset 'emscripten'.\r\nI/Toolset 'emscripten' setup successful.\r\n=======================================================\r\n=== Main Toolset ======================================\r\n=======================================================\r\nHAM_IMPORTED_TOOLSET = emscripten\r\nHAM_TOOLSET = EMSCRIPTEN\r\nHAM_TOOLSET_VER = 1_25\r\nHAM_TOOLSET_NAME = emscripten\r\nHAM_TOOLSET_DIR = /Users/Pierre/My Work/ham/toolsets/emscripten\r\n=======================================================\r\n=== Tools Version =====================================\r\n=======================================================\r\n--- python_27 ------------------------\r\nPython 2.7.6\r\n--- nodejs ------------------------\r\nv0.10.32\r\n--- java_jdk16 ------------------------\r\n--- java ---\r\njava version \"1.8.0_25\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_25-b17)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.25-b02, mixed mode)\r\n--- javac ---\r\njavac 1.8.0_25\r\n--- xslt_tools_1 ----------------------\r\n--- xsltproc ---\r\nxsltproc was compiled against libxml 20900, libxslt 10128 and libexslt 817\r\n--- saxon ------\r\nSaxon-HE 9.3.0.5J from Saxonica\r\n--- emscripten ------------------------\r\nemcc (Emscripten GCC-like replacement) 1.25.0 (commit c40c7c218c3cfac5d832607733cf1cbc6ba47dab)\r\nCopyright (C) 2014 the Emscripten authors (see AUTHORS.txt)\r\nThis is free and open source software under the MIT license.\r\nThere is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n\r\n=======================================================\r\n```\r\n- Now you can use 'emcc' and all the Emscripten command line tools from the shell's command line.\r\n\r\n### Test\r\n```\r\n. ham-toolset emscripten\r\ncd \"$HAM_HOME/sources/ham/tests/pi\"\r\nemcc pi.c -o pi.html\r\n```\r\nThis should output pi.html in the current directory.\r\n\r\nOpen pi.html in your web browser, it should print in the console view:\r\n```\r\nPI version 1.0.0 (argc:1,argv:0x501020)\r\npi ~= 3.14159065, with 500000 iterations\r\n```\r\n\r\n# Jam/FT-Jam\r\n\r\nHam (the make replacement part) is a derivative of \"FT-Jam\" which is itself a\r\nderivative of the Jam build tool, based and 100% compatible with Jam 2.5.\r\n\r\n- The FT-Jam homepage: http://www.freetype.org/jam/\r\n- The original Jam homepage: http://www.perforce.com/jam/jam.html\r\n\r\nhttp://www.perforce.com/jam/jam.html is a good resource to get familiar with the Jam language, however \"Ham\" has made quite a few change to default rules. See ``ham/rules/base.ham``` for an overview. ","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}