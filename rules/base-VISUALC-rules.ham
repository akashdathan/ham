rule SharedLink {
  # get rid of the '.exp/.ilk' files when cleaning
  Clean  clean : $(3:S=.exp) ;
  Clean  clean : $(3:S=.ilk) ;
}

rule ResourceCompiler {
  DEPENDS $(<) : $(>) ;
  Clean clean : $(<) ;
}

actions ResourceCompiler {
  rc -fo $(<) $(CCHDRS) $(RCFLAGS) $(>)
}

actions Archive {
  $(AR) -NOLOGO -WX:NO -out:$(<) $(>)
}

if $(HAM_C99) = gcc {
  ECHO "I/MSVC: Using GCC for C99 code." ;
  actions Cc
  {
    $(HAM_C99) -mno-stack-arg-probe -O2 -D_CRTIMP= -D__MINGW32__ -I${GCCDIR}/include -c -o $(<) $(C99_FLAGS) $(C99_OPTIM) $(CCDEFS) $(CCHDRS) $(>)
  }
}
else {
  actions Cc {
    $(CC) -c -Fo$(<) $(CCFLAGS) $(OPTIM) $(CCDEFS) $(CCHDRS) -I$(STDHDRS) -Tc$(>)
  }
}

actions C++ {
  $(C++) -c -Fo$(<) $(C++FLAGS) $(OPTIM) $(CCDEFS) $(CCHDRS) -I$(STDHDRS) -Tp$(>)
}

actions Link bind NEEDLIBS {
  $(LINK) $(LINKFLAGS) -DEBUG -out:$(<) $(UNDEFS) $(>) $(NEEDLIBS) $(LINKLIBS) $(SYSTEM_LINKLIBS)
}

actions DllLink bind NEEDLIBS {
  $(LINK) $(LINKFLAGS) -DLL -DEBUG -out:$(<) $(UNDEFS) $(>) $(NEEDLIBS) $(LINKLIBS) $(SYSTEM_LINKLIBS)
}
