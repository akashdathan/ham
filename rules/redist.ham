REDIST_OUT_DIR ?= [ FDirName $(TEMPDIR) _redist ] ;
REDIST_TOP_DIR ?= $(WORK) ;
REDIST_NAME ?= unnamed_redist ;

REDIST_CATEGORIES = ;

# All the files in the redist
REDIST_FILES = ;

# redistAddFile FILE : CATEGORY ;
rule redistAddFile {
  local absPath = [ FGetAbsolutePath $(<) ] ;
  local relPath = [ FRelPath $(TK_DIR) : $(absPath) ] ;
  DEPENDS redist_ : $(absPath) ;
  NOTFILE redist_ ;
  REDIST_FILES = [ ListAddBackOnce $(REDIST_FILES) : $(absPath) ] ;
  if $(>) {
    REDIST_CATEGORIES = [ ListAddBackOnce $(REDIST_CATEGORIES) : $(>) ] ;
    DEPENDS redist_$(>) : $(absPath) ;
    NOTFILE redist_$(>) ;
    REDIST_FILES$(>) = [ ListAddBackOnce $(REDIST_FILES$(>)) :  $(absPath) ] ;
  }
}

actions redistPrintFiles {
  echo "I/REDIST FILES:"
  echo $(REDIST_FILES) | sed 's~'$(REDIST_TOP_DIR)/'~~g'
}
actions redistPrintCategories {
  echo "I/REDIST CATEGORIES:"
  echo $(REDIST_CATEGORIES)
}

actions redistPackage {
  pushd $(REDIST_TOP_DIR)
  echo `date` >> $(<:D)/$(<:B)_build_date.txt
  FILE_LIST=`echo $(REDIST_FILES$(>)) | sed 's~'$(REDIST_TOP_DIR)/'~~g'`
  7z a -mx9 $(<) $(<:D)/$(<:B)_build_date.txt ${FILE_LIST}
  popd
}

# redistBuild target : categories : ext ;
rule redistBuild {
  local CAT = $(2) ;
  CAT ?= "" ;
  NOTFILE $(CAT) ;
  NOTFILE redist_$(CAT) ;
  local EXT = $(3) ;
  EXT ?= "" ;
  local FILENAME = $(REDIST_NAME)_$(EXT).7z ;
  local DEST = [ FDirName $(REDIST_OUT_DIR) $(FILENAME) ] ;
  DEPENDS $(DEST) : redist_$(CAT) ;
  redistPackage $(DEST) : $(CAT) ;
  DEPENDS $(<) : $(DEST) ;
  DEPENDS redist-build : $(DEST) ;
}

redistPrintFiles redist-print-files ;
redistPrintCategories redist-print-categories ;
DEPENDS redist-print : redist-print-files redist-print-categories ;

MakeLocate redist-build : $(REDIST_OUT_DIR) ;
