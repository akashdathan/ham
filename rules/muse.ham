MUSE_HTML_HEADER ?= [ FDirName $(HAM_HOME) sources emacs site muse-tpl empty.html ] ;
MUSE_HTML_FOOTER ?= [ FDirName $(HAM_HOME) sources emacs site muse-tpl empty.html ] ;

rule MuseHtml {
  local src = [ FGristFiles $(>) ] ;
  local dst = [ FGristFiles $(>:S=.html) ] ;
  # ECHO "src:" $(src) ;
  # ECHO "dst:" $(dst) ;
  MusePublish $(dst) : $(src) : html ;
  DEPENDS muse : muse-html ;
  DEPENDS all : muse ;
  return $(dst) ;
}

rule MusePdf {
  local src = [ FGristFiles $(>) ] ;
  local dst = [ FGristFiles $(>:S=.pdf) ] ;
  MusePublish $(dst) : $(src) : pdf ;
  DEPENDS muse : muse-pdf ;
  DEPENDS all : muse ;
  return $(dst) ;
}

rule MusePublish {
  DEPENDS $(<) : $(>) ;
  DEPENDS muse-$(3) : $(<) ;
  Clean clean : $(<) ;
}
actions MusePublish bind PUBLISH {
  DST=$(<)
  SRC=$(>)
  SRCDIR=`dirname ${SRC}`
  TYPE=$(<:S)
  # Remove the starting '.' of the extension
  TYPE=${TYPE:1:${#TYPE}-1}
  MUSE_PUBLISH_DEST=${SRC%.muse}.${TYPE}
  export MUSE_HTML_HEADER="$(MUSE_HTML_HEADER)"
  # echo MUSE_HTML_HEADER: ${MUSE_HTML_HEADER}
  export MUSE_HTML_FOOTER="$(MUSE_HTML_FOOTER)"
  # echo MUSE_HTML_FOOTER: ${MUSE_HTML_FOOTER}
  # echo "MusePublish:" $(>) "->" ${MUSE_PUBLISH_DEST} "(" ${TYPE} ")"
  cd "${SRCDIR}"
  # echo muse-publish agl-${TYPE} "`basename ${SRC}`"
  muse-publish agl-${TYPE} "`basename ${SRC}`"
  # muse-publish always publish in the same folder & name as the source file,
  # so we move the file to the final destination if needed
  if [ "${MUSE_PUBLISH_DEST}" != "${DST}" ]; then
    mv "${MUSE_PUBLISH_DEST}" "${DST}"
  fi
}

# MuseDirHtml DIR : HEADER.html : FOOTER.html ;
rule MuseDirHtml {
  local DIR = $(1) ;
  local SRC = [ FGristFiles [ ListFiles $(DIR) : *.muse ] ] ;
  if $(2) {
    INCLUDES $(SRC) : [ FGristFiles $(2) ] ;
  }
  if $(3) {
    INCLUDES $(SRC) : [ FGristFiles $(3) ] ;
  }
  for _i in $(SRC) {
    local dst = [ MuseHtml muse-html : $(_i) ] ;
    if $(2) {
      MUSE_HTML_HEADER on $(dst) = $(2) ;
    }
    if $(3) {
      MUSE_HTML_FOOTER on $(dst) = $(3) ;
    }
  }
}

# MuseDirPdf DIR : HEADER.pdf : FOOTER.pdf ;
rule MuseDirPdf {
  local DIR = $(1) ;
  local SRC = [ FGristFiles [ ListFiles $(DIR) : *.muse ] ] ;
  if $(2) {
    INCLUDES $(SRC) : [ FGristFiles $(2) ] ;
  }
  if $(3) {
    INCLUDES $(SRC) : [ FGristFiles $(3) ] ;
  }
  for _i in $(SRC) {
    local dst = [ MusePdf muse-pdf : $(_i) ] ;
    if $(2) {
      MUSE_TEX_HEADER on $(dst) = $(2) ;
    }
    if $(3) {
      MUSE_TEX_FOOTER on $(dst) = $(3) ;
    }
  }
}

#
# Example usage:
#
# MuseHtml muse-html : hello.muse ;
# MusePdf muse-pdf : hello.muse ;
#
